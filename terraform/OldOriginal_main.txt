resource "google_compute_instance" "vm" {
    for_each = {for instance in var.instances : "${var.project_id}-instance-${index(var.instances,instance)}" => instance }
    project = var.project_id
    name = each.key
    description = each.value.description
    machine_type = each.value.machine_type
    zone = each.value.zone
    hostname = "${each.key}-${each.value.zone}.asx.com.au"



	
    # the code section "dynamic"  is looping the var "service_account" declarated in the input.tf file/
    # if the "service_account" is not null/empty the dynamic will create 1 resource, if not (if empty/null) the resource will not be created
    # if the resource is to be created, its content will have
    # an email from the variable "service_account" in the input.tf
    # a scope from the variable "scopes" in the input.tf

    # homework: research and explain the use of dynamic in terraform to act as an if/else condition using the for_each operator/function
    # pros: keep a cleaner code and make it easier to read

    dynamic service_account {
        for_each = var.service_account != "" ? [1] : []
        content {
            email = var.service_account
            scopes = var.scopes
        }
    }
}



#3. Create an output.tf file that would provide an output made up of the list of VM hostnames as a map, keyed by the instance name
# understand tf and make this work

#4. Bonus - extend the output to output the IP addresses assigned to each instance, keyed by instance FQDN
# just do it